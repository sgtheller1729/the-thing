name: ECR Docker Build & Kubernetes Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      task:
        description: "Select Task"
        type: choice
        options:
          - Deploy
          - Destroy
        required: true

jobs:
  docker_build:
    name: Build & Push Docker to ECR
    if: ${{ github.event.inputs.task == 'Deploy' }}
    runs-on: ubuntu-latest

    steps:
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Amazon ECR Login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & Push to ECR
        run: |
          IMAGE=${{ vars.NAMESPACE }}
          ECR_REPO=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/$IMAGE
          TAG=latest

          docker build --platform linux/amd64 -t $IMAGE ./app
          docker tag $IMAGE:latest $ECR_REPO:$TAG
          docker push $ECR_REPO:$TAG

  terraform_apply:
    name: Apply Terraform for Kubernetes Resources
    runs-on: ubuntu-latest
    needs: docker_build
    if: ${{ github.event.inputs.task == 'Deploy' }}
    defaults:
      run:
        working-directory: ./k8s

    steps:
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve

  terraform_destroy:
    name: Remove Kubernetes Resources via Terraform
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.task == 'Destroy' }}
    defaults:
      run:
        working-directory: ./k8s

    steps:
      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan for Destroy
        run: terraform plan -destroy -input=false

      - name: Terraform Destroy
        run: terraform apply -destroy -auto-approve
